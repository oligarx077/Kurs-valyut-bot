import telebot
from telebot import types
import kurs

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä  TelegramBot
bot = telebot.TeleBot('Telegram_bot_API_key')


class ConvertionException(Exception):
    pass


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã \start
@bot.message_handler(commands=['start', 'help'])
def start(message: telebot.types.Message):
    user_id = message.from_user.id
    text = 'üí± –í–∞–ª—é—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏\n –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç: /kurs \n –î–æ–ª–ª–∞—Ä üîÑ –°—É–º: /usd_to_uzs  \n –°—É–º üîÑ –î–æ–ª–ª–∞—Ä: /uzs_to_usd \n –ï–≤—Ä–æ üîÑ –°—É–º: /eur_to_uzs \n –°—É–º üîÑ –ï–≤—Ä–æ: /uzs_to_eur \n  –†—É–±–ª—å üîÑ –°—É–º: /rub_to_uzs \n –°—É–º üîÑ –†—É–±–ª—å: /uzs_to_rub'
    service_btn = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    service1 = types.KeyboardButton('/kurs', )
    service2 = types.KeyboardButton('/usd_to_uzs')
    service3 = types.KeyboardButton('/uzs_to_usd')
    service4 = types.KeyboardButton('/eur_to_uzs')
    service5 = types.KeyboardButton('/uzs_to_eur')
    service6 = types.KeyboardButton('/rub_to_uzs')
    service7 = types.KeyboardButton('/uzs_to_rub')

    # service_btn.row(service1)
    service_btn.add(service1, service2, service3, service4, service5, service6, service7)
    bot.send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É', reply_markup=service_btn)


# KURS
@bot.message_handler(commands=['kurs'])
def kurs_info(message: telebot.types.Message):
    user_id = message.from_user.id
    bot.send_message(user_id,
                     f'–ö—É—Ä—Å –í–∞–ª—é—Ç—å –Ω–∞ {kurs.date()[0]} \n üá™üá∫{kurs.eur()[0][0]}: {kurs.eur()[0][1]}\n üá∫üá∏{kurs.usd()[0][0]}: {kurs.usd()[0][1]}\n üá∑üá∫{kurs.rub()[0][0]}: {kurs.rub()[0][1]}\n')


# Convert UZS to USD
@bot.message_handler(commands=['uzs_to_usd'])
def uzs_to_usd(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é UZS –Ω–∞ USD")
    bot.register_next_step_handler(message, uzsusd)


def uzsusd(message):
    kurs_usd = float(kurs.usd()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount1 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total1 = round((amount1 / kurs_usd), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result = f'{amount1} UZS —ç—Ç–æ {total1} USD'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount1) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount1}')
    except:
        bot.send_message(message.from_user.id, "–í–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(message.chat.id, result)


# Convert USD to UZS
@bot.message_handler(commands=['usd_to_uzs'])
def usd_to_uzs(message):
    user_id = message.from_user.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é USD –Ω–∞ UZS")
    bot.register_next_step_handler(message, usduzs)


def usduzs(message):
    user_id = message.from_user.id
    kurs_usd = float(kurs.usd()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount2 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total2 = round((amount2 * kurs_usd), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result2 = f'{amount2} USD —ç—Ç–æ {total2} UZS'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount2) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount2}')
    except:
        bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(user_id, result2)


# Convert EUR to UZS
@bot.message_handler(commands=['eur_to_uzs'])
def eur_to_uzs(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é EUR –Ω–∞ UZS")
    bot.register_next_step_handler(message, euruzs)


def euruzs(message):
    user_id = message.chat.id
    kurs_eur = float(kurs.eur()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount3 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total3 = round((amount3 * kurs_eur), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result2 = f'{amount3} EUR —ç—Ç–æ {total3} UZS'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount3) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount3}')
    except:
        bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(user_id, result2)


# Convert UZS to EUR
@bot.message_handler(commands=['uzs_to_eur'])
def uzs_to_eur(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é UZS –Ω–∞ EUR")
    bot.register_next_step_handler(message, uzseur)


def uzseur(message):
    user_id = message.chat.id
    kurs_eur = float(kurs.eur()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount4 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total4 = round((amount4 / kurs_eur), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result4 = f'{amount4} UZS —ç—Ç–æ {total4} EUR'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount4) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount4}')
    except:
        bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(user_id, result4)


# Convert UZS to RUB
@bot.message_handler(commands=['uzs_to_rub'])
def uzs_to_rub(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é UZS –Ω–∞ RUB")
    bot.register_next_step_handler(message, uzsrub)


def uzsrub(message):
    user_id = message.chat.id
    kurs_rub = float(kurs.rub()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount5 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total5 = round((amount5 / kurs_rub), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result5 = f'{amount5} UZS —ç—Ç–æ {total5} RUB'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount5) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount5}')
    except:
        bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(user_id, result5)


# Convert RUB to UZS
@bot.message_handler(commands=['rub_to_uzs'])
def rub_to_uzs(message):
    user_id = message.chat.id
    bot.send_message(user_id, "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é RUB –Ω–∞ UZS ")
    bot.register_next_step_handler(message, rubuzs)


def rubuzs(message):
    user_id = message.chat.id
    kurs_rub = float(kurs.rub()[0][1])  # –Ω–∞—à –∫—É—Ä—Å —Ü–∏—Ñ—Ä–æ–π
    try:
        amount6 = float(message.text)  # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —á–∏—Å–ª–æ
        total6 = round((amount6 * kurs_rub), 2)  # –Ω–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        result6 = f'{amount6} RUB —ç—Ç–æ {total6} UZS'  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if type(amount6) == str:
            raise ConvertionException(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {amount6}')
    except:
        bot.send_message(user_id, "–í—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ")
        return
    bot.send_message(user_id, result6)


try:
    bot.polling(none_stop=True, interval=0)
except Exception:
    pass
